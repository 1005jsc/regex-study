

Ⅰgroups and ranges

1. 기본적인 매칭

예): /Hi/gm

그냥 일반적인 텍스트, Hi와 매칭된것만
하이라이트가 된다 


2. | : or 연산자 

예): /Hi|Hello/gm

Hi와 Hello 둘다 매칭된다 

3.  () : 그룹지정

예1): /(Hi|Hello)/gm

괄호에 싸인 부분의 결과값은 
그룹으로 지정이된다 
위와같은 경우는, 
Hi와 Hello가 매칭이되고 
그룹 1로 지정이된다 

예2): /(Hi|Hello)|(And)/gm

그룹1 : hi와 Hello
그룹2 : And 
를 만족하는 것들이 하이라이트 된다 

예3) : /gr(e|a)y/gm

grey 혹은 gray 두개를 찾고싶다 

예4) : /gr(?:e|a)y/gm

예3에서 딱히 그룹으로 지정하고 싶지 
않을때 괄호 앞에 '?:'를 붙여주면
하이라이트는 되지만 그룹으로 
지정되지는 않아진다 
찾지만 기억하지 않음 


4. 대괄호 []

/gr(e|a|d)y/gm
이렇게 or를 남발하면 불편하기 떄문에 

예1) /gr[aed]y/gm
이렇게 하면 위와 같은 결과가 나온다
대괄호 안에 하나라도 문자가 들어있으면 
매칭이된다 

예2) /gr[abcdef]y/gm 는
     /gr[a-f]y/gm과 결과가 같다 

예3) /[a-zA-Z0-9]/gm

a 부터 z까지, 대문자 a 부터 z 까지, 
0부터9까지 의 문자를 하나라도 
포함하면 하이라이트가 된다 



5. 꺽쇠기호 ^

예1) /[^a-zA-Z0-9]/gm

부정(not)이다 위의 내용을 제외한
모든 문자들이 하이라이트가된다 




Ⅱ quantifiers

6. 물음표 ? 

(zero or one) 없거나 있거나 

예1) : /gra?y/gm

a가 없는것 또는 있는 gray를 찾아준다 
(gray, gry)


7. 별표 *

(zero or one or more) 없거나 있거나 많거나~

예1) : /gra*y/gm

a가 없거나, 있거나 a가 두개이상인 것도
찾아준다 (gry, gray, graaaaaay)

8. 플러스 기호 +

(one or more) 있거나 많거나
(gray, graaaaaay)



8. 중괄호 {}

예1) : /gra{2}y/gm

최소 몇번, 최대 몇번 

a가 2번 나오는 gray
(graay)

예2) : /gra{2,3}y/gm

a가 최소 2개 최대 3개 인 gray를 고름
(graay, graaay)

예3) : /gra{2,}y/gm

a가 최소 2개 


Ⅲ boundary type


9. \b' ' 

단어의 앞이 ' ' 인 경우 ' '선택

예1)  /\bYa/gm => Yagami, Ya, YaYa

단어 앞이 'Ya'인 경우 Ya를 선택 에서 'Ya'만 선택


10. ' '\b

단어의 뒤가 ' ' 인 경우 ' '를 선택

예2) /Ya\b/gm  => booYa, doYa, Ya 에서 'Ya'만 선택

단어의 뒤가 'Ya'인 경우 Ya를 선택

11. ' '\B 대문자 b일 경우

예3) /Ya\B/gm

단어의 뒤가 'Ya' 인 경우 해당되는 
'Ya'를 제외한 나머지를 선택함 

11. ^' '

flag에서 multiline을 체크했을때 :
문장앞에 ' '가 있는 경우 ' '를 선택

flag에서 multiline을 체크하지 않았을때 : 
문단앞에 ' '가 있는 경우 ' '를 선택


12. ' '$

문장의 끝에 있는 ' '를 선택 

flag에서 multiline을 체크했을때 :
문장의 끝에 있는 ' '를 선택

flag에서 multiline을 체크하지 않았을때 : 
문단의 끝에 있는 ' '를 선택


Ⅳ character classes


13. .

모든 문자열을 선택

예1) : /./gm


14. \'특수문자'

\다음에 특수문자를 넣어야
특수 문자를 찾을 수 있음  

예1) : /\./gm

.을 선택함 

예2) : /\[\]/gm

[]을 선택함 


15. \d 

모든 숫자열을 찾음 (d는 digit의 약자임)

16. \D

숫자가 아닌 모든것들을 찾음 

17. \w \W

모든 문자열을 찾음(숫자도 포함됨) (w는 word의 약자)

18. \s \S

스페이스를 찾음 (s는 space의 약자)

19. [^\w\s] 혹은 [\W]

모든 특수문자열(문자도 아니고 숫자도 아니고)





일단 내용은 끝~~~

나머지는 퀴즈로 연습해서 푸셈 




---------------------------------------------------------------

실전연습!



Ⅰ 전화번호 만 골라서 선택하기 

1. 가장 간단하게 만들기 

010-2952-1190
010.2952.1190
010 2952 1190  
02 252 1029
처럼 있다고 해보자

일단 010-2952-1190에 해당되게 만들어본다

\d\d\d\-\d\d\d\d\-\d\d\d\d

2. 만든 로직을 좀 더 일반화 시켜보기 
 . 하고 ' ' 도 해보자
\d\d\d[-. ]\d\d\d\d[-. ]\d\d\d\d
처럼 대괄호로 만들 수도 있고

아니면
\d\d\d(\-|\.|\s)\d\d\d\d(\-|\.|\s)\d\d\d\d
로 할수도 있다 

여기서 \d들을 소괄호{}로 표현할 수 도있다 
\d{2,3}[-. ]\d{3, 4}[-. ]\d{4}

이러면 전화번호를 어느정도 다 찾을 수 있다 
 
Ⅱ 이메일

1단계: 단어
[a-zA-Z]+
여기서 +를 안치면 a에서 z까지이거나 
A-Z인 단 하나의 알파벳만을 의미하게되버린다 



2단계: 단어뿐만아니라 한단어에
이상한 기호들도 들어갈 수 있다  
[a-zA-Z0-9._+-]+


[a-zA-Z0-9._+-]+@[a-zA-Z0-9._+-]+\.[a-zA-Z0-9._+-]+



Ⅲ 유투브 링크

이거 영상보삼 설명하기 너무 힘들어 
(?:https?:\/\/)?(?:www\.)?youtu.be\/([a-zA-Z0-9-]{11})



























































